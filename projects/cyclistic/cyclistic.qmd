---
title: "Cyclistic Customer Analysis"
subtitle: "Google Data Analytics Certificate Capstone"
date: today
image: images/josh-mccausland-8TfeD3J4VtQ-unsplash.jpg
title-block-banner: true
format:
  html:
    highlight-style: breezedark

abstract-title: "Summary"
abstract: "An analysis of historical Divvy Bikes ride data to identify differences in user cohort behaviour."
params:
  start_date: "September 2021"
  end_date: "August 2022"
---


# Background
In 2016 Cyclistic launched a bike-sharing sharing offering which has grown to a fleet of 6000 geotracked bicycles and network of more than 1000 stations across Chicago.

Analysis by Cyclistic's finance team has determined that riders who purchase annual memberships are more profitable than casual riders.

Head of marketing, Lily Moreno, has set a goal of designing marketing strategies aimed at converting casual riders to members. The intial step is to better understand how casual users and members differ. This information will provide a basis for members of the marketing analytics team to investigate why casual riders might purchase a membership, and how digital media could influence marketing strategy.

The executive team, which is detail oriented, will decide whether the proposed marketing strategies are approved.


# Defining the business task

The scope of this analysis is limited to the first step, and investigates the question:

  > How do annual members and casual riders use Cyclistic bikes differently?


Unpacking this question highlights a number of areas that may provide useful insights.

What defines a member and a casual rider?

The Divvy Bikes pricing information indicates members pay an upfront annual fee to access pricing that includes "no-charge" ride time and lower per minute charges. Casual riders access ride sharing on an ad-hoc basis, paying a per-ride charge, and higher per minute charge which begins when the bike is undocked. Daily pass riders pay a day access fee to access unlimited 3 hour rides for the duration of the pass.

What influence do the plans have on the user behaviour?
Can we distinguish plan types by the average duration of rides? What percentage of riders exceed the included 45 minutes ride time of membership plans? Is this same for members and casuals?

This may help identify if time inclusions are a factor for casual riders considering membership.

Another important aspect to consider is when different user cohorts ride. Which days, and times are popular for the different cohorts? And is there identifiable differences or commonality in behaviours?

Are the types and number of rides influenced by day to day variations in weather or broader seasonal patterns? Are causals user all season, or fair weather riders. All season casual riders could be a group that see benefit in membership.

Where do different user cohorts ride?
Riders commuting to work are likely to use docking stations in business districts during the week. Recreational riders may prefer parks and areas along the shoreline or cafe precincts. Docking stations with high levels of usage on different days of the week may provide insight into where user hotspots are located.



# Data sources
### Divvy Bikes system data and pricing
The base data for individual rides was extracted from Divvy Bike data files covering the period 1 September 2021 to 31 August 2022. Additional data description and a download link is provided on the Divvy Bikes [system data](https://ride.divvybikes.com/system-data) page.

The [license](https://ride.divvybikes.com/data-license-agreement) allows inclusion of data within analyses and studies published for non-commercial. This clause covers the intended use.


Details of current [pricing](https://ride.divvybikes.com/pricing) for Divvy Bikes offerings was accessed on 25 September 2022.


### NOAA Climate Data

  Weather data covering September 2021 to August 2022 ordered from [NOOA National Centers for Environmental Information](https://www.ncdc.noaa.gov/cdo-web/datasets/GHCND/stations/GHCND:USW00094846/detail)

  O'Hare International Airport weather station was selected as representative of the Chicago region.

### Divvy Bikes historical station status

Historical station status identifies which stations actively used between September 2021 and August 2022. This information is used to assist identifying Divvy operational rides in the data set.

[City of Chicago open data listing of Divvy Stations](https://data.cityofchicago.org/Transportation/Divvy-Bicycle-Stations/bbyy-e7gq)

# Data cleaning and preparation

### Initial import
```{r libraries}
#| warning: false
#| echo: false
library(tidyverse)
library(lubridate)
library(glue)
library(archive)
```
The Divvy trip data files have a consistent naming format prefixed with numeric year and month.
A list of data file names is generated for months in the range `r params$start_date` to `r params$end_date`.

```{r filename="01_import_clean.R"}
#| label: file-list
#| lst-cap: "Building file list"


divvy_files <- seq(
  my(params$start_date),
  my(params$end_date),
  by = "months"
) %>%
  enframe(
    value = "timestamp"
  ) %>%
  glue_data(
    "{year(timestamp)}",
    "{stringi::stri_sprintf('%02d', month(timestamp))}",
    "-divvy-tripdata.zip"
  )
```

All original zip files are downloaded to the `data/raw` folder and are not modified.
Any files that are already present are skipped.

```{r}
divvy_downloaded <- glue("data/raw/{divvy_files}")
to_dl <- divvy_files[!file.exists(divvy_downloaded)]
```

Required data files that are missing from the raw data folder are downloaded.



```{r}
#| eval: false

if (length(to_dl) > 0) {
  download.file(
    glue("https://divvy-tripdata.s3.amazonaws.com/{to_dl}"),
    glue("data/raw/{to_dl}")
  )
}
```
Note that the preceding section will not execute correctly in a Quarto document.
A script for the full import process is provided in the supporting material.


To check the downloaded file data, the first 1000 rows are read from `r params$start_date` zip file and column specification inspected.

```{r}

bike_inspect <- map_dfr(
  divvy_downloaded[1],
  ~ archive_read(.) %>%
    read_csv(
      n_max = 1000,
      show_col_types = FALSE
    )
)
spec(bike_inspect)
```

To verify the column naming is consistent across all files, the header row from all data files is read.


```{r}

bike_headers <- map_dfr(
  divvy_downloaded,
  ~ archive_read(.) %>%
    read_csv(
      id = "filename",
      n_max = 1,
      col_names = FALSE,
      show_col_types = FALSE
    )
) %>%
  select(-filename) %>%
  distinct()

str(bike_headers)
```

After checking the detected formats, and ensuring the column naming is consistent across all files, data is read from the zip files using a fixed column specification.

Data which does not matching the defined column specification will raise a warning from the import process.


```{r}
#| cache: true
bike_rides <- map_dfr(
  divvy_downloaded,
  ~ archive_read(.) %>%
    read_csv(
      col_types = cols(
        ride_id = col_character(),
        rideable_type = col_factor(levels = c(
          "classic_bike",
          "docked_bike",
          "electric_bike"
        )),
        started_at = col_datetime(),
        ended_at = col_datetime(),
        start_station_name = col_character(),
        start_station_id = col_character(),
        end_station_name = col_character(),
        end_station_id = col_character(),
        start_lat = col_double(),
        start_lng = col_double(),
        end_lat = col_double(),
        end_lng = col_double(),
        member_casual = col_factor(levels = c(
          "member",
          "casual"
        ))
      ),
      locale = locale(tz = "America/Chicago")
    )
)
```
### Data inspection

```{r}
#| label: tbl-both-missing
#| tbl-cap: "Missing Values"
#| tbl-cap-location: bottom
bike_rides %>%
  summarise(across(
    everything(),
    ~ sum(is.na(.x))
  )) %>%
  pivot_longer(
    cols = everything(),
    names_to = "Column",
    values_to = "Missing Count"
  ) %>%
  knitr::kable()
```


```{r}
#| label: tbl-missing-by-station
#| tbl-cap: "Missing Values by station type"
#| tbl-cap-location: bottom
bike_rides %>%
  mutate(
    missing_start = is.na(start_station_name),
    missing_end = is.na(end_station_name)
  ) %>%
  summarise(
    "Start Only" = sum(missing_start & !missing_end),
    "End Only" = sum(missing_end & !missing_start),
    Both = sum(missing_start & missing_end),
    "Rides effected" = sum(missing_start | missing_end)
  ) %>%
  knitr::kable()
```

@tbl-missing-by-station indicates that `r sprintf("%.2f", 1322897 * 100 / nrow(bike_rides))`% of all rides are missing data for least one docking stations. This represents significant number of data points, and should be checked to determine whether this is an error or there has been systematic changes made.

```{r}
#| label: tbl-coord-range
#| tbl-cap: "Latitude and Longitude ranges"
bike_rides %>%
  summarise(
    start_lat = range(start_lat, na.rm = TRUE),
    start_lng = range(start_lng, na.rm = TRUE),
    end_lat = range(end_lat, na.rm = TRUE),
    end_lng = range(end_lng, na.rm = TRUE)
  ) %>%
  knitr::kable()
```
The maximum start longitude and latitude values listed in @tbl-coord-range are significantly different to the remaining values. This suggests some rides may have originated outside the Chicago metropolitan area serviced by Cyclistic. This should be investigated.

```{r}
#| label: tbl-date-ranges
#| tbl-cap: "Ride start and end date ranges"
bike_rides %>%
  summarise(
    start_range = range(started_at),
    end_range = range(ended_at)
  ) %>%
  knitr::kable()
```

@tbl-date-ranges indicates the dataset includes rides which finished after `r params$end_date`.
```{r}
bike_rides %>%
  filter(ended_at > ymd_hms("20220901 07:00:00")) %>%
  summarise(n())
```

The sample of data shows that some station names and station id's are missing.
The missing stations do have latitude and longitude values, however on closer inspection the values appear to these have been rounded to two decimal places.

This suggests that part of the data set may have been anonymised or obfuscated deliberately.
