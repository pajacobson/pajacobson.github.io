{
  "hash": "6d73a5c2f51c3d71757c31e5870198d0",
  "result": {
    "markdown": "---\ntitle: \"Cyclistic Customer Analysis\"\nsubtitle: \"Google Data Analytics Certificate Capstone\"\ndate: today\nimage: images/josh-mccausland-8TfeD3J4VtQ-unsplash.jpg\ntitle-block-banner: true\nformat:\n  html:\n    highlight-style: breezedark\nabstract-title: \"Summary\"\nabstract: \"An analysis of historical Divvy Bikes ride data to identify differences in user cohort behaviour.\"\n---\n\n\n\n# Background\nIn 2016 Cyclistic launched a bike-sharing sharing offering which has grown to a fleet of 6000 geotracked bicycles and network of more than 1000 stations across Chicago.\n\nAnalysis by Cyclistic's finance team has determined that riders who purchase annual memberships are more profitable than casual riders.\n\nHead of marketing, Lily Moreno, has set a goal of designing marketing strategies aimed at converting casual riders to members. The intial step is to better understand how casual users and members differ. This information will provide a basis for members of the marketing analytics team to investigate why casual riders might purchase a membership, and how digital media could influence marketing strategy.\n\n\n\n# Examining the business task\n\nThe scope of this analysis is limited to the first step, and investigates the question:\n\n  > How do annual members and casual riders use Cyclistic bikes differently?\n\n\nUnpacking this question highlights a number of areas that may provide useful insights.\n\nWhat defines a member and a casual rider?\n\nThe Divvy Bikes pricing information indicates members pay an upfront annual fee to access pricing that includes \"no-charge\" ride time and lower per minute charges. Casual riders access ride sharing on an ad-hoc basis, paying a per-ride charge, and higher per minute charge which begins when the bike is undocked. Daily pass riders pay a day access fee to access unlimited 3 hour rides for the duration of the pass.\n\nWhat influence do the plans have on the user behaviour?\nCan we distingushish plan types by the average duration of rides? What percentage of riders exceed the included 45 minutes ride time of membership plans? Is this same for members and casuals?\n\nThis may help identify if time inclusions are a factor for casual riders considering membership.\n\nAnother important aspect to consider is when different user cohorts ride. Which days, and times are popular for the different cohorts? And is there identifiable differences or commonality in behaviours?\n\nAre the types and number of rides influenced by day to day variations in weather or broader seasonal patterns? Are causals user all season, or fair weather riders. All season casual riders could be a group that see benefit in membership.\n\nWhere do different user cohorts ride?\nRiders commuting to work are likely to use docking stations in business districts during the week. Recreational riders may prefer parks and areas along the shoreline or cafe precincts. Docking stations with high levels of usage on different days of the week may provide insight into where user hotspots are located.\n\nSupplementing the data provided by Divvy Bikes with weather observations will allow these questions to be investigated.\n\n\n# Data sources\n### Divvy Bikes system data and pricing\nThe base data for individual rides was extracted from Divvy Bike data files covering the period 1 September 2021 to 31 August 2022. Additional data description and a download link is provided on the Divvy Bikes [system data](https://ride.divvybikes.com/system-data) page.\n\nThe [license](https://ride.divvybikes.com/data-license-agreement) allows inclusion of data within analyses and studies published for non-commercial. This clause covers the intended use.\n\n\nDetails of current [pricing](https://ride.divvybikes.com/pricing) for Divvy Bikes offerings was accessed on 25 September 2022.\n\n\n### NOAA Climate Data\n\n  Weather data covering September 2021 to August 2022 ordered from [NOOA National Centers for Environmental Information](https://www.ncdc.noaa.gov/cdo-web/datasets/GHCND/stations/GHCND:USW00094846/detail)\n\n  O'Hare International Airport weather station was selected as representative of the Chicago region.\n\n### Divvy Bikes historical station status\n\nHistorical station status identifies which stations actively used between September 2021 and August 2022. This information is used to assist identifying Divvy operational rides in the data set.\n\n[City of Chicago open data listing of Divvy Stations](https://data.cityofchicago.org/Transportation/Divvy-Bicycle-Stations/bbyy-e7gq)\n\n# Data cleaning and preparation\n\n### Initial import\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(glue)\nlibrary(archive)\n```\n:::\n\nThe Divvy trip data files have a consistent naming format prefixed with numeric year and month.\nA list of data file names is generated for months in the range `start_date` to `end_date`.\n\n\n::: {.cell filename='01_import_clean.R'}\n\n```{.r .cell-code  caption=\"Building file list\"}\nstart_date <- \"2021-09\"\nend_date <- \"2022-08\"\n\ndivvy_files <- seq(\n  ym(start_date),\n  ym(end_date),\n  by = \"months\"\n) %>%\n  enframe(\n    value = \"timestamp\"\n  ) %>%\n  glue_data(\n    \"{year(timestamp)}\",\n    \"{stringi::stri_sprintf('%02d', month(timestamp))}\",\n    \"-divvy-tripdata.zip\"\n  )\n```\n:::\n\n\nAll original zip files are downloaded to the `data/raw` folder to ensure there is an unmodified copy of the data. Any files that are already present are not download again.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndivvy_downloaded <- glue(\"data/raw/{divvy_files}\")\nto_dl <- divvy_files[!file.exists(divvy_downloaded)]\n```\n:::\n\n\nRequired data files that are missing from the raw data folder are downloaded.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (length(to_dl) > 0) {\n  download.file(\n    glue(\"https://divvy-tripdata.s3.amazonaws.com/{to_dl}\"),\n    glue(\"data/raw/{to_dl}\")\n  )\n}\n```\n:::\n\nNote that the preceding section will not execute correctly in a Quarto document.\nA script for the full import process is provided in the supporting material.\n\nTo check the downloaded file data, 1000 rows are read from the oldest file and column specification inspected.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_inspect <- map_dfr(\n  divvy_downloaded[1],\n  ~ archive_read(.) %>%\n    read_csv(\n      n_max = 1000,\n      show_col_types = FALSE\n    )\n)\nspec(bike_inspect)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n```\n:::\n:::\n\n\nThe first row from all data files is read to check for consistent naming and columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_headers <- map_dfr(\n  divvy_downloaded,\n  ~ archive_read(.) %>%\n    read_csv(\n      id = \"filename\",\n      n_max = 1,\n      col_names = FALSE,\n      show_col_types = FALSE\n    )\n) %>%\n  select(-filename) %>%\n  distinct()\n\nknitr::kable(bike_headers)\n```\n\n::: {.cell-output-display}\n|X1      |X2            |X3         |X4       |X5                 |X6               |X7               |X8             |X9        |X10       |X11     |X12     |X13           |\n|:-------|:-------------|:----------|:--------|:------------------|:----------------|:----------------|:--------------|:---------|:---------|:-------|:-------|:-------------|\n|ride_id |rideable_type |started_at |ended_at |start_station_name |start_station_id |end_station_name |end_station_id |start_lat |start_lng |end_lat |end_lng |member_casual |\n:::\n:::\n\n\nAfter checking the detected formats, and ensuring the column naming is consistent across all files, data is read from the zip files using a defined column specification. Data not matching the defined format will raise a warning from the import process.\n\n\n\n::: {.cell hash='cyclistic_cache/html/unnamed-chunk-6_7a701c6e67cf7b6afa1d2d3f418a0f67'}\n\n```{.r .cell-code}\nbike_rides <- map_dfr(\n  divvy_downloaded,\n  ~ archive_read(.) %>%\n    read_csv(\n      col_types = cols(\n        ride_id = col_character(),\n        rideable_type = col_factor(levels = c(\n          \"classic_bike\",\n          \"docked_bike\",\n          \"electric_bike\"\n        )),\n        started_at = col_datetime(),\n        ended_at = col_datetime(),\n        start_station_name = col_character(),\n        start_station_id = col_character(),\n        end_station_name = col_character(),\n        end_station_id = col_character(),\n        start_lat = col_double(),\n        start_lng = col_double(),\n        end_lat = col_double(),\n        end_lng = col_double(),\n        member_casual = col_factor(levels = c(\n          \"member\",\n          \"casual\"\n        ))\n      ),\n      locale = locale(tz = \"America/Chicago\")\n    )\n)\n\nbike_rides %>%\n  slice_sample(n = 10) %>%\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n|ride_id          |rideable_type |started_at          |ended_at            |start_station_name           |start_station_id |end_station_name                  |end_station_id | start_lat| start_lng|  end_lat|   end_lng|member_casual |\n|:----------------|:-------------|:-------------------|:-------------------|:----------------------------|:----------------|:---------------------------------|:--------------|---------:|---------:|--------:|---------:|:-------------|\n|786A0C91C222D488 |electric_bike |2022-08-18 18:04:09 |2022-08-18 18:20:34 |Paulina Ave & North Ave      |TA1305000037     |NA                                |NA             |  41.91029| -87.67010| 41.93000| -87.70000|casual        |\n|19C7482D3C77EC9F |electric_bike |2022-07-28 19:43:48 |2022-07-28 19:44:00 |Federal St & Polk St         |SL-008           |NA                                |NA             |  41.87217| -87.62969| 41.87000| -87.63000|casual        |\n|5B65E5AB9CE2254D |electric_bike |2022-08-09 19:05:53 |2022-08-09 19:10:58 |Aberdeen St & Jackson Blvd   |13157            |N Green St & W Lake St            |20246.0        |  41.87777| -87.65485| 41.89000| -87.65000|casual        |\n|0B4967254C941DA7 |classic_bike  |2022-08-03 10:56:20 |2022-08-03 12:15:57 |LaSalle St & Jackson Blvd    |TA1309000004     |Shedd Aquarium                    |15544          |  41.87817| -87.63193| 41.86723| -87.61536|casual        |\n|819EA969FCD23AEF |classic_bike  |2022-06-11 14:01:35 |2022-06-11 14:13:19 |Clark St & Chicago Ave       |13303            |Daley Center Plaza                |TA1306000010   |  41.89675| -87.63089| 41.88424| -87.62963|casual        |\n|D18E554D68A1E0D9 |electric_bike |2022-08-19 14:17:06 |2022-08-19 14:25:22 |Wabash Ave & 9th St          |TA1309000010     |Calumet Ave & 18th St             |13102          |  41.87068| -87.62580| 41.85761| -87.61941|member        |\n|E9CF6220FB249325 |electric_bike |2022-04-10 11:36:24 |2022-04-10 11:49:30 |Sheffield Ave & Kingsbury St |13154            |Clark St & Armitage Ave           |13146          |  41.91064| -87.65308| 41.91831| -87.63628|casual        |\n|E0797EFDD58C6A31 |classic_bike  |2021-10-06 15:59:34 |2021-10-06 16:33:59 |Halsted St & 18th St (Temp)  |13099            |Halsted St & Roscoe St            |TA1309000025   |  41.85837| -87.64639| 41.94367| -87.64895|member        |\n|9B104DD847B47367 |docked_bike   |2021-09-24 16:31:02 |2021-09-24 16:52:34 |Shedd Aquarium               |15544            |DuSable Lake Shore Dr & Monroe St |13300          |  41.86723| -87.61535| 41.88096| -87.61674|casual        |\n|92703B9DB00A409A |electric_bike |2022-07-16 21:05:42 |2022-07-16 21:10:50 |NA                           |NA               |Wells St & Huron St               |TA1306000012   |  41.91000| -87.63000| 41.89472| -87.63436|member        |\n:::\n:::\n\n\nThe sample of data shows that some station names and station id's are missing.\nThe missing stations do have latitude and longitude values, however on closer inspection the values appear to these have been rounded to two decimal places.\n\nThis suggests that part of the data set may have been anonymised or obfuscated deliberately.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}