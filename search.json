[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "about",
    "section": "",
    "text": "y <- c(1, 2, 3)"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "projects.",
    "section": "",
    "text": "Google Data Analytics Certificate Capstone\n\n\n\n\n\n\n\n\n\nSep 23, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/cyclistic/cyclistic.html",
    "href": "projects/cyclistic/cyclistic.html",
    "title": "Cyclistic Customer Analysis",
    "section": "",
    "text": "This analysis examines the question:\n\nHow do annual members and casual riders use Cyclistic bikes differently?\n\n\nvariable_charge <- function(rate, free_min, duration) {\n  rate * (as.numeric(duration) / 60 - free_min)\n}\n\ncasual - single trip $3.30 + 30 minutes then $0.15 pm y = 3.3 + 0.15 * clamp(t - 30, lower = 0)\ncasual - day pass $15.00 + unlimited 3hrs then $0.16 y = 15 + 0.16 * clamp(t - 180, lower = 0)\ncasual - electric $1.00 + 0.39 pm y = 1 + 0.39 * t\nmember - electric $10 month, $0 + 0.16 pm y = 0.16 * t\nmember - classic (unlimited 45 min) $10 month, $0 + 45min + 0.16 pm y = 10/n + 0.16 * clamp(t - 45, lower = 0)"
  },
  {
    "objectID": "projects/cyclistic/cyclistic.html#data-sources",
    "href": "projects/cyclistic/cyclistic.html#data-sources",
    "title": "Cyclistic Customer Analysis",
    "section": "Data sources",
    "text": "Data sources\nThree primary data sources were used for the analysis:\n\nDivvy Bikes ride data\nMonthly data files from September 2021 to August 2022. Additional data description and download link can be found on the system data page.\nDivvy Bikes website\nDetails of time limits and charges for current casual and membership plans.\nDivvy Bikes active stations\n\nhttps://data.cityofchicago.org/Transportation/Divvy-Bicycle-Stations/bbyy-e7gq\n\nNOAA Daily weather records\nWeather data covering September 2021 to August 2022.\nOâ€™Hare International Airport weather station was selected as representative of the Chicago region."
  },
  {
    "objectID": "projects/cyclistic/cyclistic.html#data-cleaning-and-preparation",
    "href": "projects/cyclistic/cyclistic.html#data-cleaning-and-preparation",
    "title": "Cyclistic Customer Analysis",
    "section": "Data cleaning and preparation",
    "text": "Data cleaning and preparation\n\nInitial import\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(glue)\nlibrary(archive)\n\nThe Divvy trip data files have a consistent naming format prefixed with numeric year and month. A list of data file names is generated for months in the range start_date to end_date.\n\n\n\n01_import_clean.R\n\nstart_date <- \"2021-09\"\nend_date <- \"2022-08\"\n\ndivvy_files <- seq(\n  ym(start_date),\n  ym(end_date),\n  by = \"months\"\n) %>%\n  enframe(\n    value = \"timestamp\"\n  ) %>%\n  glue_data(\n    \"{year(timestamp)}\",\n    \"{stringi::stri_sprintf('%02d', month(timestamp))}\",\n    \"-divvy-tripdata.zip\"\n  )\n\n\nAll original zip files are downloaded to the divy_data/raw folder to ensure there is an unmodified copy of the data. Any files that are already present are not download again.\n\ndivvy_downloaded <- glue(\"divy_data/raw/{divvy_files}\")\nto_dl <- divvy_files[!file.exists(divvy_downloaded)]\n\nRequired data files that are missing from the raw data folder are downloaded.\n\nif (length(to_dl) > 0) {\n  download.file(\n    glue(\"https://divvy-tripdata.s3.amazonaws.com/{to_dl}\"),\n    glue(\"data/raw/{to_dl}\")\n  )\n}\n\nNote that the preceding section will not execute correctly in a Quarto document. A script for the full import process is provided in the supporting material.\nTo check the downloaded file data, 1000 rows are read from the oldest file and column specification inspected.\n\nbike_inspect <- map_dfr(\n  divvy_downloaded[1],\n  ~ archive_read(.) %>%\n    read_csv(\n      n_max = 1000,\n      show_col_types = FALSE\n    )\n)\nspec(bike_inspect)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\n\nThe first row from all data files is read to check for consistent naming and columns.\n\nbike_headers <- map_dfr(\n  divvy_downloaded,\n  ~ archive_read(.) %>%\n    read_csv(\n      id = \"filename\",\n      n_max = 1,\n      col_names = FALSE,\n      show_col_types = FALSE\n    )\n)\nknitr::kable(bike_headers)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfilename\nX1\nX2\nX3\nX4\nX5\nX6\nX7\nX8\nX9\nX10\nX11\nX12\nX13\n\n\n\n\narchive_read(divy_data/raw/202109-divvy-tripdata.zip)[1]\nride_id\nrideable_type\nstarted_at\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nend_station_id\nstart_lat\nstart_lng\nend_lat\nend_lng\nmember_casual\n\n\narchive_read(divy_data/raw/202110-divvy-tripdata.zip)[1]\nride_id\nrideable_type\nstarted_at\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nend_station_id\nstart_lat\nstart_lng\nend_lat\nend_lng\nmember_casual\n\n\narchive_read(divy_data/raw/202111-divvy-tripdata.zip)[1]\nride_id\nrideable_type\nstarted_at\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nend_station_id\nstart_lat\nstart_lng\nend_lat\nend_lng\nmember_casual\n\n\narchive_read(divy_data/raw/202112-divvy-tripdata.zip)[1]\nride_id\nrideable_type\nstarted_at\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nend_station_id\nstart_lat\nstart_lng\nend_lat\nend_lng\nmember_casual\n\n\narchive_read(divy_data/raw/202201-divvy-tripdata.zip)[1]\nride_id\nrideable_type\nstarted_at\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nend_station_id\nstart_lat\nstart_lng\nend_lat\nend_lng\nmember_casual\n\n\narchive_read(divy_data/raw/202202-divvy-tripdata.zip)[1]\nride_id\nrideable_type\nstarted_at\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nend_station_id\nstart_lat\nstart_lng\nend_lat\nend_lng\nmember_casual\n\n\narchive_read(divy_data/raw/202203-divvy-tripdata.zip)[1]\nride_id\nrideable_type\nstarted_at\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nend_station_id\nstart_lat\nstart_lng\nend_lat\nend_lng\nmember_casual\n\n\narchive_read(divy_data/raw/202204-divvy-tripdata.zip)[1]\nride_id\nrideable_type\nstarted_at\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nend_station_id\nstart_lat\nstart_lng\nend_lat\nend_lng\nmember_casual\n\n\narchive_read(divy_data/raw/202205-divvy-tripdata.zip)[1]\nride_id\nrideable_type\nstarted_at\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nend_station_id\nstart_lat\nstart_lng\nend_lat\nend_lng\nmember_casual\n\n\narchive_read(divy_data/raw/202206-divvy-tripdata.zip)[1]\nride_id\nrideable_type\nstarted_at\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nend_station_id\nstart_lat\nstart_lng\nend_lat\nend_lng\nmember_casual\n\n\narchive_read(divy_data/raw/202207-divvy-tripdata.zip)[1]\nride_id\nrideable_type\nstarted_at\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nend_station_id\nstart_lat\nstart_lng\nend_lat\nend_lng\nmember_casual\n\n\narchive_read(divy_data/raw/202208-divvy-tripdata.zip)[1]\nride_id\nrideable_type\nstarted_at\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nend_station_id\nstart_lat\nstart_lng\nend_lat\nend_lng\nmember_casual\n\n\n\n\n\nAfter checking the detected formats, and ensuring the column naming is consistent across all files, data is read from the zip files using a defined column specification. Data not matching the defined format will raise a warning from the import process.\nThe date columns are set to import as strings as readr::col_datetime does not provide a way to specify timezone.\n\nbike_rides <- map_dfr(\n  divvy_downloaded,\n  ~ archive_read(.) %>%\n    read_csv(\n      col_types = cols(\n        ride_id = col_character(),\n        rideable_type = col_factor(levels = c(\n          \"classic_bike\",\n          \"docked_bike\",\n          \"electric_bike\"\n        )),\n        started_at = col_datetime(),\n        ended_at = col_datetime(),\n        start_station_name = col_character(),\n        start_station_id = col_character(),\n        end_station_name = col_character(),\n        end_station_id = col_character(),\n        start_lat = col_double(),\n        start_lng = col_double(),\n        end_lat = col_double(),\n        end_lng = col_double(),\n        member_casual = col_factor(levels = c(\n          \"member\",\n          \"casual\"\n        ))\n      ),\n      locale = locale(tz = \"America/Chicago\")\n    )\n)\nknitr::kable(slice_sample(bike_rides, n = 10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nride_id\nrideable_type\nstarted_at\nended_at\nstart_station_name\nstart_station_id\nend_station_name\nend_station_id\nstart_lat\nstart_lng\nend_lat\nend_lng\nmember_casual\n\n\n\n\n2375ADB74CCB7C4D\nclassic_bike\n2022-02-12 15:59:04\n2022-02-12 16:01:39\nDamen Ave & Pierce Ave\nTA1305000041\nDamen Ave & Pierce Ave\nTA1305000041\n41.90940\n-87.67769\n41.90940\n-87.67769\nmember\n\n\nE0605D3902A16F41\nclassic_bike\n2022-08-17 16:31:37\n2022-08-17 17:03:16\nStreeter Dr & Grand Ave\n13022\nDuSable Lake Shore Dr & Diversey Pkwy\nTA1309000039\n41.89228\n-87.61204\n41.93259\n-87.63643\nmember\n\n\n762886DE9838834C\nelectric_bike\n2021-09-16 18:48:52\n2021-09-16 19:03:27\nClarendon Ave & Junior Ter\n13389\nClark St & Bryn Mawr Ave\nKA1504000151\n41.96099\n-87.64949\n41.98353\n-87.66897\ncasual\n\n\n4A2AD66C38F0084C\nelectric_bike\n2021-10-20 10:41:13\n2021-10-20 12:54:17\nWells St & Hubbard St\nTA1307000151\nWells St & Huron St\nTA1306000012\n41.89008\n-87.63429\n41.89465\n-87.63435\nmember\n\n\nAD9F8BF6098F4644\nclassic_bike\n2021-11-26 15:13:01\n2021-11-26 15:16:12\nStreeter Dr & Grand Ave\n13022\nStreeter Dr & Grand Ave\n13022\n41.89228\n-87.61204\n41.89228\n-87.61204\ncasual\n\n\n3B1B7A2FFD779F55\nelectric_bike\n2022-01-06 19:35:47\n2022-01-06 20:00:12\nLeavitt St & Armitage Ave\nTA1309000029\nLeavitt St & Belmont Ave\nKA17018068\n41.91783\n-87.68246\n41.93935\n-87.68328\ncasual\n\n\n1388163B867839B4\nelectric_bike\n2022-03-08 18:11:46\n2022-03-08 18:31:48\nClark St & Bryn Mawr Ave\nKA1504000151\nWilton Ave & Belmont Ave\nTA1307000134\n41.98357\n-87.66922\n41.94018\n-87.65304\nmember\n\n\n7B2F2AE67D0BB49B\nclassic_bike\n2021-09-09 20:23:26\n2021-09-09 20:38:56\nWells St & Elm St\nKA1504000135\nNew St & Illinois St\nTA1306000013\n41.90322\n-87.63432\n41.89085\n-87.61862\nmember\n\n\n35A5359600824CDA\nelectric_bike\n2021-11-17 08:10:15\n2021-11-17 08:16:49\nNA\nNA\nClark St & Lincoln Ave\n13179\n41.93000\n-87.64000\n41.91586\n-87.63470\nmember\n\n\n30B0694376059479\nclassic_bike\n2022-06-13 14:22:54\n2022-06-13 14:33:53\nWells St & Huron St\nTA1306000012\nClinton St & Lake St\n13021\n41.89472\n-87.63436\n41.88564\n-87.64182\nmember\n\n\n\n\n\nThe sample of data shows that some station names and station idâ€™s are missing. The missing stations do have latitude and longitude values, however on closer inspection the values appear to these have been rounded to two decimal places.\nThis suggests that part of the data set may have been anonymised or obfuscated deliberately."
  }
]